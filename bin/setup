#!/bin/sh -e

x() {
  echo >&2 "$*"
  exec $x
}

abort() {
  echo >&2 "$*"
  exit 1;
}

setup_network() {
  network_name="$1"
  test -z "$network_name" && abort "setup_network: network_name not set"

  ip link add "$network_name" type bridge
  ip link set "$network_name" up
}

shutdown_network() {
  network_name="$1"
  test -z "$network_name" && abort "shutdown_network: network_name not set"
  ip link delete "$network_name" type bridge || true
}

setup_tap() {
  network_name="$1"
  tap_name="$2"
  test -z "$network_name" && abort "setup_tap: network_name not set"
  test -z "$tap_name" && abort "setup_tap: tap_name not set"

  ip tuntap add "$tap_name" mode tap
  ip link set "$tap_name" master "$network_name"
  ip link set "$tap_name" up
}

shutdown_tap() {
  tap_name="$1"
  test -z "$tap_name" && abort "shutdown_tap: tap_name not set"

  ip tuntap delete "$tap_name" mode tap || true
}

assign_network_address() {
  network_name=$1
  cidr=$2
  test -z "$network_name" && abort "assign_network_address: network_name not set"
  test -z "$cidr" && abort "assign_network_address: cidr not set"

  sudo ip address add "$cidr" dev "$network_name"
}

start_node() {
  network_name="$1"
  serial="$2"
  test -z "$network_name" && abort "start_node: network_name not set"
  test -z "$serial" && abort "start_node: serial not set"

  tap_name="$serial"

  setup_tap "$network_name" "$serial"

  mac_address=$(printf "52:54:00:%02x:%02x:%02x" $((RANDOM % 256)) $((RANDOM % 256)) $((RANDOM % 256)))
  qemu-system-x86_64 \
    -nographic \
    -smbios "type=1,serial=$serial" \
    -netdev tap,id=$network_name,ifname=$tap_name,script=no,downscript=no \
    -device virtio-net-pci,netdev="$network_name",mac=$mac_address

  shutdown_tap "$tap_name"
}

usage() {
  echo >&2 "Usage: $0 network NETWORK_NAME [HOST_ADDRESS]"
  echo >&2 "       $0 node NETWORK_NAME SERIAL"
}


cmd_network() {
  network_name=$1
  host_address=$2
  test -z "$network_name" && ( usage; exit 2 )

  setup_network "$network_name"

  if [ -n "$host_address" ]; then
    assign_network_address "$network_name" "$host_address"
  fi

  trap "shutdown_network $network_name" SIGTERM SIGINT
  echo "Network $network_name created.  Press Ctrl+C to shutdown."
  tail -F /dev/null
}

cmd_node() {
  network_name=$1
  serial=$2
  test -z "$serial" && ( usage; exit 2 )
  test -z "$network_name" && ( usage; exit 2 )

  tap_name="$serial"

  start_node "$network_name" "$serial"
}

mode="$1"
if [ -z "$mode" ]; then
  usage
  exit 2
fi

case "$mode" in
  network)
    shift
    cmd_network $@
    ;;
  node)
    shift
    cmd_node $@
    ;;
  *)
    usage
    exit 2
esac
